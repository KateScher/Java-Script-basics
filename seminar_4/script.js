// Задание 1:

// 1. Создайте массив с элементами 1, 2, 3.
// Выведите на экран каждый из этих элементов.

// const elements = [1, 2, 3];
// console.log(elements[0]);
// console.log(elements[1]);
// console.log(elements[2]);

// 2. Создайте массив с произвольными элементами.
// Выведите на экран количество элементов в этом массиве.

// const elements = [1, 4, "text", true];
// console.log(elements.length);

// 3. Создайте массив с элементами 'a', 'b', 'c'. Запишите вместо первого элемента
// число 1, вместо второго - 2, вместо третьего - 3.

// const elementos = ["a", "b", "c"];
// console.log(elementos);
// elementos[0] = 1;
// elementos[1] = 2;
// elementos[2] = 3;

// console.log(elementos);

// Задание 2:

// 1. Создайте массив с элементами 1, 2 и 3. С помощью оператора ++ увеличьте
// каждый элемент массива на единицу.

// const arr = [1, 2, 3];
// console.log(arr);
// arr[0]++;
// arr[1]++;
// arr[2]++;

// console.log(arr);
// 2й вариант через цикл
// const array = [1, 2, 3];
// console.log(array);

// for (let i = 0; i < array.length; i++) {
//   array[i]++;
// }
// console.log(array);
// 2. Узнайте длину следующего массива и объясните почему такое значение:
// ```
// const arr = [];
// arr[3] = 'a';
// arr[8] = 'b';
// ```
// Длина массива = длина массива + 1, поэтому длина равна 9.
// Такой разреженный массив лучше не делать, будет работать медленнее.

// 3. Пусть дан такой массив: `[1, 2, 3]`. Добавьте ему в конец элементы 4 и 5.
// const arr = [1, 2, 3];
// arr.push(4, 5);
// console.log(arr);
// 4. Создайте произвольный массив из 5 элементов, удалите из него два элемента.
// Проверьте, какое станет значение свойства length после этого.

// const array = [];

// for (let i = 0; i < 5; i++) {
//   // array[i] = Math.floor(Math.random() * 100);
//   array.push(Math.floor(Math.random() * 100)); // через push вариант предпочтительнее
// }
// console.log(array);

// array.pop();
// array.pop();
// console.log(array);
// console.log(array.length);

// Задание 3:

// 1. С помощью цикла for выведите в консоль числа от 11 до 33.
// for (let i = 11; i < 33; i++) {
//   console.log(i);
// }
// 2. С помощью цикла for выведите в консоль нечетные числа в промежутке от 1
// до 100 включительно.
// for (let i = 1; i < 100; i++) {
//   if (i % 2 !== 0) {
//     console.log(i);
//   }
// }
//2й вариант:
// for (let i = 1; i < 100; i += 2) {
//   console.log(i);
// }
//
// 3. С помощью цикла for выведите в консоль числа от 100 до 0.
// for (let i = 100; i > 0; i--) {
//   console.log(i);
// }
// 4. Создать переменную с заданным числом. Умножайте число на 3 столько раз,
// пока результат умножения не станет больше 1000. Какое число получится?
// Посчитайте количество итераций, необходимых для этого.
// const num = 4;
// let count = 0;

// for (let i = num; i <= 1000; i *= 3) {
//   // console.log(i);
//   count++;
// }
// console.log(count);

// 2й вариант:

// let number = 2;
// let iterations = 0;

// while (number <= 1000) {
//   number *= 3;
//   iterations++;
// }

// console.log("Полученное число:", number);
// console.log("Количество итераций:", iterations);

////////////////////

// Задание 4:

// 1. Создать массив `[2, 5, 9, 15, 1, 4]`.
// Выведите в консоль те элементы массива, которые больше 3-х, но меньше 10.
// const arr = [2, 5, 9, 15, 1, 4];
// for (let i = 0; i < arr.length; i++) {
//   if (arr[i] > 3 && arr[i] < 10) {
//     console.log(arr[i]);
//   }
// }
// 2. Найдите сумму четных чисел от 2 до 100.
// let res = 0;
// for (let i = 2; i < 100; i += 2) {
//   res = res + i;
//   console.log(res);
// }
// console.log(res);
//////
// 3. Создать массив `[2, 5, 9, 3, 1, 4]`.
// Найдите сумму элементов этого массива.
// const arr = [2, 5, 9, 3, 1, 4];
// let res = 0;
// arr.forEach((element) => {  // либо arr.forEach((element, i) - в i будет лежать индекс перебираемого элемента
//   res = res + element;
// });
// console.log(res);

//
//2й вариант через цикл forOf:
// const arr = [2, 5, 9, 3, 1, 4];
// let res = 0;
// for (const elm of arr) {
//   // elm - константа для итерации
//   res = res + elm;
// }
// console.log(res);
// 3-й вариант for Off:
// const arr = [2, 5, 9, 3, 1, 4];
// let res = 0;
// for (const elm of arr) {
//   // elm - константа для итерации
//   res = res + elm;
// }
// console.log(res);
// 4-й  вариант через for In:
// const arr = [2, 5, 9, 3, 1, 4];
// let res = 0;
// for (const i in arr) {
//   res = res + arr[i];
// }
// console.log(res);
//
/* !!!! В методах  (в отличие от циклов) нельзя использовать break,
в циклах for и forOf - индексы элементов получить нельзя,
а в методах (например, в forEach) можно)
// Методы: 
- forEach - используется для перебора от и до.., для полного перебора, 
в данном методе можно получить индекс элемента.
- цикл forOf - хорошо использовать для перебора всех значений в массиве,
он короче, чем обычный for. Получает только значения, но не индексы!!!
- цикл for In - получает ключи или индексы.*/
//

// 4. С помощью цикла сформируйте строку '-1-2-3-4-5-6-7-8-9-'.

// let result = "-";
// for (let i = 1; i <= 9; i++) {
//   result += i + "-";
// }

// console.log(result);

// 5. Создать массив `[2, 5, 9, 0, 3, 1, 4]`.
// Запустите цикл, который будет по очереди выводить элементы этого массива в
// консоль до тех пор, пока не встретится элемент со значением 0. После этого
// цикл должен завершить свою работу.
// const arr = [2, 5, 9, 0, 3, 1, 4];
// for (let i = 0; i < arr.length; i++) {
//   if (arr[i] === 0) {
//     break;
//   }
//   console.log(arr[i]); // => 2 5 9
// }

/* 2й вариант без break:
 минус данного решения - если в массиве не будет нуля, критической ошибки
 не будет, но значение будет undefined, бесконечный цикл */
// const array = [2, 5, 9, 0, 3, 1, 4];
// for (let i = 0; array[i] !== 0; i++) {
//   console.log(array[i]);
// }

////////

// Задание 5:

// 1. Создать массив из 10 случайных чисел от 0 до 100 включительно.
// Наобходимо вывести в консоль все числа, которые делятся и на 2, и на 3.
// ---------------

// const arr = [];

// for (let i = 0; i < 10; i++) {
//   arr.push(Math.floor(Math.random() * 100));
// }

// console.log(arr);

// for (let i = 0; i < arr.length; i++) {
//   if (arr[i] % 6 === 0) {
//     console.log(arr[i]);
//   }
// }
// 2. Дан массив: `[1, 2, 3, 2, 4, 3, 5, 6, 3, 2, 3]`. Подсчитайте количество
// цифр 3 в этом массиве.
//-----------
// const arr = [1, 2, 3, 2, 4, 3, 5, 6, 3, 2, 3];
// let count = 0;

// arr.forEach((element) => {
//   if (element === 3) {
//     count++;
//   }
// });
// console.log(count);
//---------
// 4. Дан массив: `[1, 2, 3, 4, 5]`.
// С помощью метода splice преобразуйте массив в следующий: [1, 4, 5]

/*метод splice() позволяет изменить содержимое массива за счёт удаления существующих элементов, и/или добавления новых элементов в массив.*/
// const arr = [1, 2, 3, 4, 5]; // в константе лежит не массив, а ссылка на него
// arr.splice(1, 2); // 2 цифры - начиная с какого индекса убрать, и сколько значений
// console.log(arr);

// 5. Создать новый массив на основе старого из цифр, которые больше 30
// через метод filter (Вернет новый массив):
// const arr = [15, 95, 63, 58, 25];

// const array = arr.filter((element) => {
//   if (element > 25) {
//     return true;
//   }
//   return false;
// });

// console.log(array);
//2й вариант:
// const arr = [15, 95, 63, 58, 25];
// const array = arr.filter((element) => {
//   return element > 25;
// });
// console.log(array); //  => [95, 63, 58]
// То же что и 2й вариант, только без фигурных скобок и return, т.к. только одно выражение, если выражений больше, то скобки обязательны:
// const arr = [15, 95, 63, 58, 25];
// const array = arr.filter((element) => element > 25);
// console.log(array); //  => [95, 63, 58]
